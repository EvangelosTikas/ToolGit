#!/usr/bin/env bash
# ToolGit ‚Äî CLI wrapper for git_helpers.sh

set -euo pipefail

# --- Resolve path to this script (cross-platform, symlink-safe) ---
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

# --- Locate library (lib/ToolGit/git_helpers.sh) ---
LIB_DIR="$SCRIPT_DIR/../lib/ToolGit"
LIB_PATH="${TOOLGIT_LIB_PATH:-$LIB_DIR/git_helpers.sh}"

if [[ ! -f "$LIB_PATH" ]]; then
  echo "‚ùå Error: git_helpers.sh not found at $LIB_PATH" >&2
  echo "üí° Try reinstalling: make install" >&2
  exit 1
fi

# --- Source the helper library ---
# shellcheck source=/dev/null
source "$LIB_PATH"

TOOLGIT_VERSION="${TOOLGIT_VERSION:-dev}"

# --- Built-in help function ---
show_help() {
  cat <<EOF
ToolGit ‚Äî Git helper CLI
Version: $TOOLGIT_VERSION

Usage:
  ToolGit <command> [args...]

Examples:
  ToolGit sync
  ToolGit branch-cleanup
  ToolGit --help

Available helper functions:
EOF
  # List all functions starting with "git_" defined in git_helpers.sh
  declare -F | awk '{print $3}' | grep '^git_' | sort || echo "  (no git_* functions found)"
}

# --- CLI argument parsing ---
case "${1:-}" in
  -h|--help)
    show_help
    exit 0
    ;;
  -v|--version)
    echo "ToolGit version $TOOLGIT_VERSION"
    exit 0
    ;;
  "" )
    show_help
    exit 0
    ;;
esac

# --- Execute function if defined ---
cmd="$1"; shift
if declare -F "$cmd" >/dev/null 2>&1; then
  "$cmd" "$@"
else
  echo "‚ùå Unknown command: $cmd"
  echo "üí° Run 'ToolGit --help' for available commands."
  exit 1
fi
