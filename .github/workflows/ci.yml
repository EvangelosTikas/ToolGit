name: ToolGit CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show system info
        shell: bash
        run: |
          echo "=== System Information ==="
          uname -a || ver
          echo "Runner OS: $RUNNER_OS"
          echo "Current user: $USER"

      - name: Show pre-build disk & memory usage
        shell: bash
        run: |
          echo "=== Before build ==="
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            free -h || true
            df -h
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            vm_stat | head -10 || true
            df -h
          else
            echo "Memory info (Windows via Bash):"
            systeminfo | grep -i "Memory" || true
            echo "Disk usage:"
            df -h || true
          fi

      - name: Install dependencies
        shell: bash
        run: |
          echo "=== Installing dependencies for $RUNNER_OS ==="
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update -y
            sudo apt-get install -y shellcheck bats
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew update
            brew install shellcheck bats
          else
            choco install shellcheck -y || echo "Warning: shellcheck may already be installed"
            echo "Warning: Skipping Bats on Windows (not supported)"
          fi

      - name: Install ToolGit
        shell: bash
        run: |
          echo "=== Installing ToolGit ==="
          make install

      - name: Run Lint
        shell: bash
        run: |
          echo "=== Lint ==="
          make lint

      - name: Run CLI Tests
        shell: bash
        run: |
          echo "=== CLI Tests ==="
          make test

      - name: Run Bats Tests
        shell: bash
        run: |
          echo "=== Bats Tests ==="
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "Warning: Skipping Bats on Windows"
          elif command -v bats &>/dev/null; then
            make test-bats
          else
            echo "Warning: Bats not available, skipping"
          fi

      - name: Check for leftover test repos
        shell: bash
        run: |
          echo "=== Checking for leftover test repos ==="
          case "$RUNNER_OS" in
            Linux|macOS)
              if ls /tmp/git-helpers-test.* 1>/dev/null 2>&1; then
                echo "Error: leftover test repos detected in /tmp!"
                exit 1
              fi
              ;;
            Windows)
              if ls "$TEMP"\\git-helpers-test.* 1>/dev/null 2>&1; then
                echo "Error: leftover test repos detected in TEMP!"
                exit 1
              fi
              ;;
          esac
          echo "Pass: No leftover test repos detected."

      - name: Post-build disk usage
        shell: bash
        run: |
          echo "=== After build ==="
          df -h || true
